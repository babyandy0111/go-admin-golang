definitions:
  dto.AccountDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.AccountInsertReq:
    properties:
      accountNumber:
        type: string
      accountSource:
        type: string
      createBy:
        type: integer
      enName:
        type: string
      name:
        type: string
      sfId:
        type: string
      updateBy:
        type: integer
    type: object
  dto.AccountUpdateReq:
    properties:
      accountNumber:
        type: string
      accountSource:
        type: string
      createBy:
        type: integer
      enName:
        type: string
      id:
        description: 客戶流水號
        type: integer
      name:
        type: string
      sfId:
        type: string
      updateBy:
        type: integer
    type: object
  dto.ArticleDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.ArticleInsertReq:
    properties:
      author:
        type: string
      content:
        type: string
      createBy:
        type: integer
      publishAt:
        type: string
      status:
        type: string
      title:
        type: string
      updateBy:
        type: integer
    type: object
  dto.ArticleUpdateReq:
    properties:
      author:
        type: string
      content:
        type: string
      createBy:
        type: integer
      id:
        description: 流水號
        type: integer
      publishAt:
        type: string
      status:
        type: string
      title:
        type: string
      updateBy:
        type: integer
    type: object
  dto.CompanyTypeDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.CompanyTypeInsertReq:
    properties:
      code:
        type: string
      createBy:
        type: integer
      description:
        type: string
      name:
        type: string
      updateBy:
        type: integer
    type: object
  dto.CompanyTypeUpdateReq:
    properties:
      code:
        type: string
      createBy:
        type: integer
      description:
        type: string
      id:
        description: 本司流水號
        type: integer
      name:
        type: string
      updateBy:
        type: integer
    type: object
  dto.CurrencyDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.CurrencyInsertReq:
    properties:
      createBy:
        type: integer
      currency:
        type: string
      label:
        type: string
      name:
        type: string
      updateBy:
        type: integer
    type: object
  dto.CurrencyUpdateReq:
    properties:
      createBy:
        type: integer
      currency:
        type: string
      id:
        description: 幣別流水號
        type: integer
      label:
        type: string
      name:
        type: string
      updateBy:
        type: integer
    type: object
  dto.GetSetSysConfigReq:
    properties:
      configKey:
        type: string
      configValue:
        type: string
    type: object
  dto.PassWord:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    type: object
  dto.QuoteDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.QuoteInsertReq:
    properties:
      accountId:
        type: string
      companyTypeId:
        type: string
      createBy:
        type: integer
      currencyId:
        type: string
      discount:
        type: string
      grandTotal:
        type: string
      projectName:
        type: string
      quoteName:
        type: string
      quoteNote:
        type: string
      quoteNumber:
        type: string
      sfId:
        type: string
      stage:
        type: string
      status:
        type: string
      tax:
        type: string
      total:
        type: string
      updateBy:
        type: integer
    type: object
  dto.QuoteUpdateReq:
    properties:
      accountId:
        type: string
      companyTypeId:
        type: string
      createBy:
        type: integer
      currencyId:
        type: string
      discount:
        type: string
      grandTotal:
        type: string
      id:
        description: 代號
        type: integer
      projectName:
        type: string
      quoteName:
        type: string
      quoteNote:
        type: string
      quoteNumber:
        type: string
      sfId:
        type: string
      stage:
        type: string
      status:
        type: string
      tax:
        type: string
      total:
        type: string
      updateBy:
        type: integer
    type: object
  dto.ResetSysUserPwdReq:
    properties:
      createBy:
        type: integer
      password:
        type: string
      updateBy:
        type: integer
      userId:
        description: UserID
        type: integer
    type: object
  dto.RoleDataScopeReq:
    properties:
      dataScope:
        type: string
      deptIds:
        items:
          type: integer
        type: array
      roleId:
        type: integer
    required:
    - dataScope
    - roleId
    type: object
  dto.SysApiDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysApiUpdateReq:
    properties:
      action:
        type: string
      createBy:
        type: integer
      handle:
        type: string
      id:
        description: 流水號
        type: integer
      path:
        type: string
      title:
        type: string
      type:
        type: string
      updateBy:
        type: integer
    type: object
  dto.SysConfigByKeyReq:
    properties:
      configKey:
        type: string
    type: object
  dto.SysConfigControl:
    properties:
      configKey:
        type: string
      configName:
        type: string
      configType:
        type: string
      configValue:
        type: string
      createBy:
        type: integer
      id:
        description: 流水號
        type: integer
      isFrontend:
        type: string
      remark:
        type: string
      updateBy:
        type: integer
    type: object
  dto.SysDeptDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysDeptInsertReq:
    properties:
      createBy:
        type: integer
      deptId:
        description: 流水號
        type: integer
      deptName:
        description: 部門名稱
        type: string
      deptPath:
        description: 路径
        type: string
      email:
        description: 信箱
        type: string
      leader:
        description: 负责人
        type: string
      parentId:
        description: 上级部門
        type: integer
      phone:
        description: 手机
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 狀態
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysDeptUpdateReq:
    properties:
      createBy:
        type: integer
      deptId:
        description: 流水號
        type: integer
      deptName:
        description: 部門名稱
        type: string
      deptPath:
        description: 路径
        type: string
      email:
        description: 信箱
        type: string
      leader:
        description: 负责人
        type: string
      parentId:
        description: 上级部門
        type: integer
      phone:
        description: 手机
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 狀態
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysDictDataDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysDictDataGetAllResp:
    properties:
      label:
        type: string
      value:
        type: string
    type: object
  dto.SysDictDataInsertReq:
    properties:
      createBy:
        type: integer
      cssClass:
        type: string
      default:
        type: string
      dictLabel:
        type: string
      dictSort:
        type: integer
      dictType:
        type: string
      dictValue:
        type: string
      isDefault:
        type: string
      listClass:
        type: string
      remark:
        type: string
      status:
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysDictDataUpdateReq:
    properties:
      createBy:
        type: integer
      cssClass:
        type: string
      default:
        type: string
      dictLabel:
        type: string
      dictSort:
        type: integer
      dictType:
        type: string
      dictValue:
        type: string
      id:
        type: integer
      isDefault:
        type: string
      listClass:
        type: string
      remark:
        type: string
      status:
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysDictTypeDeleteReq:
    properties:
      createBy:
        type: integer
      ids:
        items:
          type: integer
        type: array
      updateBy:
        type: integer
    type: object
  dto.SysDictTypeInsertReq:
    properties:
      createBy:
        type: integer
      dictName:
        type: string
      dictType:
        type: string
      id:
        type: integer
      remark:
        type: string
      status:
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysDictTypeUpdateReq:
    properties:
      createBy:
        type: integer
      dictName:
        type: string
      dictType:
        type: string
      id:
        type: integer
      remark:
        type: string
      status:
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysLoginLogDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysMenuDeleteReq:
    properties:
      createBy:
        type: integer
      ids:
        items:
          type: integer
        type: array
      updateBy:
        type: integer
    type: object
  dto.SysMenuInsertReq:
    properties:
      action:
        description: 請求方式
        type: string
      apis:
        items:
          type: integer
        type: array
      breadcrumb:
        description: 是否面包屑
        type: string
      component:
        description: 组件
        type: string
      createBy:
        type: integer
      icon:
        description: 图標
        type: string
      isFrame:
        description: 是否frame
        type: string
      menuId:
        description: 流水號
        type: integer
      menuName:
        description: 選單name
        type: string
      menuType:
        description: 選單類型
        type: string
      noCache:
        description: 是否缓存
        type: boolean
      parentId:
        description: 上级選單
        type: integer
      path:
        description: 路径
        type: string
      paths:
        description: id路径
        type: string
      permission:
        description: 權限流水號
        type: string
      sort:
        description: 排序
        type: integer
      sysApi:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
        type: array
      title:
        description: 顯示名稱
        type: string
      updateBy:
        type: integer
      visible:
        description: 是否顯示
        type: string
    type: object
  dto.SysMenuUpdateReq:
    properties:
      action:
        description: 請求方式
        type: string
      apis:
        items:
          type: integer
        type: array
      breadcrumb:
        description: 是否面包屑
        type: string
      component:
        description: 组件
        type: string
      createBy:
        type: integer
      icon:
        description: 图標
        type: string
      isFrame:
        description: 是否frame
        type: string
      menuId:
        description: 流水號
        type: integer
      menuName:
        description: 選單name
        type: string
      menuType:
        description: 選單類型
        type: string
      noCache:
        description: 是否缓存
        type: boolean
      parentId:
        description: 上级選單
        type: integer
      path:
        description: 路径
        type: string
      paths:
        description: id路径
        type: string
      permission:
        description: 權限流水號
        type: string
      sort:
        description: 排序
        type: integer
      sysApi:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
        type: array
      title:
        description: 顯示名稱
        type: string
      updateBy:
        type: integer
      visible:
        description: 是否顯示
        type: string
    type: object
  dto.SysOperaLogDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysPostDeleteReq:
    properties:
      createBy:
        type: integer
      ids:
        items:
          type: integer
        type: array
      updateBy:
        type: integer
    type: object
  dto.SysPostInsertReq:
    properties:
      createBy:
        type: integer
      postCode:
        type: string
      postId:
        type: integer
      postName:
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysPostUpdateReq:
    properties:
      createBy:
        type: integer
      postCode:
        type: string
      postId:
        type: integer
      postName:
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysRoleDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysRoleInsertReq:
    properties:
      admin:
        type: boolean
      createBy:
        type: integer
      dataScope:
        type: string
      deptIds:
        items:
          type: integer
        type: array
      flag:
        description: 標记
        type: string
      menuIds:
        items:
          type: integer
        type: array
      remark:
        description: 備註
        type: string
      roleId:
        description: 角色流水號
        type: integer
      roleKey:
        description: 角色代碼
        type: string
      roleName:
        description: 角色名稱
        type: string
      roleSort:
        description: 角色排序
        type: integer
      status:
        description: 狀態
        type: string
      sysDept:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysDept'
        type: array
      sysMenu:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysMenu'
        type: array
      updateBy:
        type: integer
    type: object
  dto.SysRoleUpdateReq:
    properties:
      admin:
        type: boolean
      createBy:
        type: integer
      dataScope:
        type: string
      deptIds:
        items:
          type: integer
        type: array
      flag:
        description: 標记
        type: string
      menuIds:
        items:
          type: integer
        type: array
      remark:
        description: 備註
        type: string
      roleId:
        description: 角色流水號
        type: integer
      roleKey:
        description: 角色代碼
        type: string
      roleName:
        description: 角色名稱
        type: string
      roleSort:
        description: 角色排序
        type: integer
      status:
        description: 狀態
        type: string
      sysDept:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysDept'
        type: array
      sysMenu:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysMenu'
        type: array
      updateBy:
        type: integer
    type: object
  dto.SysUserInsertReq:
    properties:
      avatar:
        type: string
      createBy:
        type: integer
      deptId:
        type: integer
      email:
        type: string
      nickName:
        type: string
      password:
        type: string
      phone:
        type: string
      postId:
        type: integer
      remark:
        type: string
      roleId:
        type: integer
      sex:
        type: string
      status:
        default: "1"
        type: string
      updateBy:
        type: integer
      userId:
        description: UserID
        type: integer
      username:
        type: string
    type: object
  dto.SysUserUpdateReq:
    properties:
      avatar:
        type: string
      createBy:
        type: integer
      deptId:
        type: integer
      email:
        type: string
      nickName:
        type: string
      phone:
        type: string
      postId:
        type: integer
      remark:
        type: string
      roleId:
        type: integer
      sex:
        type: string
      status:
        default: "1"
        type: string
      updateBy:
        type: integer
      userId:
        description: UserID
        type: integer
      username:
        type: string
    type: object
  dto.UpdateStatusReq:
    properties:
      createBy:
        type: integer
      roleId:
        description: 角色流水號
        type: integer
      status:
        description: 狀態
        type: string
      updateBy:
        type: integer
    type: object
  dto.UpdateSysUserStatusReq:
    properties:
      createBy:
        type: integer
      status:
        type: string
      updateBy:
        type: integer
      userId:
        description: UserID
        type: integer
    type: object
  go-admin_app_admin_models.SysApi:
    properties:
      action:
        type: string
      createBy:
        type: integer
      createdAt:
        type: string
      handle:
        type: string
      id:
        type: integer
      path:
        type: string
      title:
        type: string
      type:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
  go-admin_app_admin_models.SysConfig:
    properties:
      configKey:
        type: string
      configName:
        type: string
      configType:
        type: string
      configValue:
        type: string
      createBy:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      isFrontend:
        type: string
      remark:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
  go-admin_app_admin_models.SysDept:
    properties:
      children:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysDept'
        type: array
      createBy:
        type: integer
      createdAt:
        type: string
      dataScope:
        type: string
      deptId:
        description: 部門流水號
        type: integer
      deptName:
        description: 部門名稱
        type: string
      deptPath:
        type: string
      email:
        description: 信箱
        type: string
      leader:
        description: 负责人
        type: string
      params:
        type: string
      parentId:
        description: 上级部門
        type: integer
      phone:
        description: 手机
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 狀態
        type: integer
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
  go-admin_app_admin_models.SysMenu:
    properties:
      action:
        type: string
      apis:
        items:
          type: integer
        type: array
      breadcrumb:
        type: string
      children:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysMenu'
        type: array
      component:
        type: string
      createBy:
        type: integer
      createdAt:
        type: string
      dataScope:
        type: string
      icon:
        type: string
      is_select:
        type: boolean
      isFrame:
        type: string
      menuId:
        type: integer
      menuName:
        type: string
      menuType:
        type: string
      noCache:
        type: boolean
      params:
        type: string
      parentId:
        type: integer
      path:
        type: string
      paths:
        type: string
      permission:
        type: string
      roleId:
        type: integer
      sort:
        type: integer
      sysApi:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
        type: array
      title:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
      visible:
        type: string
    type: object
  handler.Login:
    properties:
      code:
        type: string
      password:
        type: string
      username:
        type: string
      uuid:
        type: string
    required:
    - code
    - password
    - username
    - uuid
    type: object
  models.Account:
    properties:
      accountNumber:
        type: string
      accountSource:
        type: string
      createBy:
        type: integer
      createdAt:
        type: string
      enName:
        type: string
      id:
        type: integer
      name:
        type: string
      sfId:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
  models.Article:
    properties:
      author:
        type: string
      content:
        type: string
      createBy:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      publishAt:
        type: string
      status:
        type: string
      title:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
  models.CompanyType:
    properties:
      code:
        type: string
      createBy:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
  models.Currency:
    properties:
      createBy:
        type: integer
      createdAt:
        type: string
      currency:
        type: string
      id:
        type: integer
      label:
        type: string
      name:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
  models.GetSalesByMRes:
    properties:
      name:
        type: string
      sales_date:
        type: string
      sales_sum:
        type: string
      who:
        type: string
    type: object
  models.Quote:
    properties:
      accountId:
        type: string
      companyTypeId:
        type: string
      createBy:
        type: integer
      createdAt:
        type: string
      currencyId:
        type: string
      discount:
        type: string
      grandTotal:
        type: string
      id:
        type: integer
      projectName:
        type: string
      quoteName:
        type: string
      quoteNote:
        type: string
      quoteNumber:
        type: string
      sfId:
        type: string
      stage:
        type: string
      status:
        type: string
      tax:
        type: string
      total:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
  response.Page:
    properties:
      count:
        type: integer
      pageIndex:
        type: integer
      pageSize:
        type: integer
    type: object
  response.Response:
    properties:
      code:
        type: integer
      msg:
        type: string
      requestId:
        description: 数据集
        type: string
      status:
        type: string
    type: object
  tools.Params:
    properties:
      treeCode:
        type: string
      treeName:
        type: string
      treeParentCode:
        type: string
    type: object
  tools.SysColumns:
    properties:
      columnComment:
        type: string
      columnId:
        type: integer
      columnName:
        type: string
      columnType:
        type: string
      createBy:
        type: integer
      createdAt:
        type: string
      deletedAt:
        type: string
      dictType:
        type: string
      edit:
        type: boolean
      fkCol:
        items:
          $ref: '#/definitions/tools.SysColumns'
        type: array
      fkLabelId:
        type: string
      fkLabelName:
        type: string
      fkTableName:
        type: string
      fkTableNameClass:
        type: string
      fkTableNamePackage:
        type: string
      goField:
        type: string
      goType:
        type: string
      htmlType:
        type: string
      increment:
        type: boolean
      insert:
        type: boolean
      isEdit:
        type: string
      isIncrement:
        type: string
      isInsert:
        type: string
      isList:
        type: string
      isPk:
        type: string
      isQuery:
        type: string
      isRequired:
        type: string
      jsonField:
        type: string
      list:
        type: string
      pk:
        type: boolean
      query:
        type: boolean
      queryType:
        type: string
      remark:
        type: string
      required:
        type: boolean
      sort:
        type: integer
      superColumn:
        type: boolean
      tableId:
        type: integer
      updateBy:
        type: integer
      updatedAt:
        type: string
      usableColumn:
        type: boolean
    type: object
  tools.SysTables:
    properties:
      businessName:
        type: string
      className:
        description: 类名
        type: string
      columns:
        items:
          $ref: '#/definitions/tools.SysColumns'
        type: array
      createBy:
        type: integer
      createdAt:
        type: string
      crud:
        type: boolean
      dataScope:
        type: string
      deletedAt:
        type: string
      functionAuthor:
        description: 功能作者
        type: string
      functionName:
        description: 功能名稱
        type: string
      isActions:
        type: integer
      isAuth:
        type: integer
      isDataScope:
        type: integer
      isLogicalDelete:
        type: string
      logicalDelete:
        type: boolean
      logicalDeleteColumn:
        type: string
      moduleFrontName:
        description: 前端文件名
        type: string
      moduleName:
        description: go文件名
        type: string
      options:
        type: string
      packageName:
        description: 包名
        type: string
      params:
        $ref: '#/definitions/tools.Params'
      pkColumn:
        type: string
      pkGoField:
        type: string
      pkJsonField:
        type: string
      remark:
        type: string
      tableComment:
        description: 表備註
        type: string
      tableId:
        description: 表流水號
        type: integer
      tableName:
        description: 表名稱
        type: string
      tplCategory:
        type: string
      tree:
        type: boolean
      treeCode:
        type: string
      treeName:
        type: string
      treeParentCode:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/account:
    delete:
      description: 刪除Account
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AccountDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "刪除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 刪除Account
      tags:
      - Account
    get:
      description: 查詢Account列表
      parameters:
      - description: 每頁幾筆
        in: query
        name: pageSize
        type: integer
      - description: 頁數
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Account'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 查詢Account列表
      tags:
      - Account
    post:
      consumes:
      - application/json
      description: 建立Account
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AccountInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "建立成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 建立Account
      tags:
      - Account
  /api/v1/account/{id}:
    get:
      description: 查詢Account
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Account'
              type: object
      security:
      - Bearer: []
      summary: 查詢Account
      tags:
      - Account
    put:
      consumes:
      - application/json
      description: 更新Account
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AccountUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "更新成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新Account
      tags:
      - Account
  /api/v1/app-config:
    get:
      description: 取得系統配置訊息，主要注意這裡不在驗證權限
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
      summary: 取得系統前台配置訊息，主要注意這裡不在驗證權限
      tags:
      - 配置管理
  /api/v1/article:
    delete:
      description: 刪除內容
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ArticleDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "刪除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 刪除內容
      tags:
      - 內容
    get:
      description: 查詢內容列表
      parameters:
      - description: 狀態
        in: query
        name: status
        type: string
      - description: 每頁幾筆
        in: query
        name: pageSize
        type: integer
      - description: 頁數
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Article'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 查詢內容列表
      tags:
      - 內容
    post:
      consumes:
      - application/json
      description: 建立內容
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ArticleInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "建立成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 建立內容
      tags:
      - 內容
  /api/v1/article/{id}:
    get:
      description: 查詢內容
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Article'
              type: object
      security:
      - Bearer: []
      summary: 查詢內容
      tags:
      - 內容
    put:
      consumes:
      - application/json
      description: 更新內容
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ArticleUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "更新成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新內容
      tags:
      - 內容
  /api/v1/captcha:
    get:
      description: 取得驗證碼
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                id:
                  type: string
                msg:
                  type: string
              type: object
      summary: 取得驗證碼
      tags:
      - 登入
  /api/v1/company-type:
    delete:
      description: 刪除CompanyType
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CompanyTypeDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "刪除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 刪除CompanyType
      tags:
      - CompanyType
    get:
      description: 查詢CompanyType列表
      parameters:
      - description: 每頁幾筆
        in: query
        name: pageSize
        type: integer
      - description: 頁數
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.CompanyType'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 查詢CompanyType列表
      tags:
      - CompanyType
    post:
      consumes:
      - application/json
      description: 建立CompanyType
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CompanyTypeInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "建立成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 建立CompanyType
      tags:
      - CompanyType
  /api/v1/company-type/{id}:
    get:
      description: 查詢CompanyType
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.CompanyType'
              type: object
      security:
      - Bearer: []
      summary: 查詢CompanyType
      tags:
      - CompanyType
    put:
      consumes:
      - application/json
      description: 更新CompanyType
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CompanyTypeUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "更新成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新CompanyType
      tags:
      - CompanyType
  /api/v1/currency:
    delete:
      description: 刪除Currency
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CurrencyDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "刪除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 刪除Currency
      tags:
      - Currency
    get:
      description: 查詢Currency列表
      parameters:
      - description: 每頁幾筆
        in: query
        name: pageSize
        type: integer
      - description: 頁數
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Currency'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 查詢Currency列表
      tags:
      - Currency
    post:
      consumes:
      - application/json
      description: 建立Currency
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CurrencyInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "建立成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 建立Currency
      tags:
      - Currency
  /api/v1/currency/{id}:
    get:
      description: 查詢Currency
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Currency'
              type: object
      security:
      - Bearer: []
      summary: 查詢Currency
      tags:
      - Currency
    put:
      consumes:
      - application/json
      description: 更新Currency
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CurrencyUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "更新成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新Currency
      tags:
      - Currency
  /api/v1/dashboard/GetSalesByM:
    get:
      description: 查詢內容列表
      parameters:
      - description: 年份
        in: query
        name: year
        type: string
      - description: 幣別
        in: query
        name: currency
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.GetSalesByMRes'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 查詢內容列表
      tags:
      - 內容
  /api/v1/db/columns/page:
    get:
      description: 資料庫表列分頁列表 / database table column page list
      parameters:
      - description: tableName / 資料表名稱
        in: query
        name: tableName
        type: string
      - description: pageSize / 页条数
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / 页碼
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      summary: 分頁列表資料 / page list data
      tags:
      - 工具 / 生成工具
  /api/v1/db/tables/page:
    get:
      description: 資料庫表分頁列表 / database table page list
      parameters:
      - description: tableName / 資料表名稱
        in: query
        name: tableName
        type: string
      - description: pageSize / 页条数
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / 页碼
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      summary: 分頁列表資料 / page list data
      tags:
      - 工具 / 生成工具
  /api/v1/dept:
    delete:
      description: 刪除資料
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDeptDeleteReq'
      responses:
        "200":
          description: '{"code": -1, "message": "刪除失敗"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 刪除部門
      tags:
      - 部門
    get:
      description: 分頁列表
      parameters:
      - description: deptName
        in: query
        name: deptName
        type: string
      - description: deptId
        in: query
        name: deptId
        type: string
      - description: position
        in: query
        name: position
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 分頁部門列表資料
      tags:
      - 部門
    post:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDeptInsertReq'
      responses:
        "200":
          description: '{"code": -1, "message": "新增失敗"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 新增部門
      tags:
      - 部門
  /api/v1/dept/{deptId}:
    get:
      description: 取得JSON
      parameters:
      - description: deptId
        in: path
        name: deptId
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 取得部門資料
      tags:
      - 部門
    put:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDeptUpdateReq'
      responses:
        "200":
          description: '{"code": -1, "message": "新增失敗"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 更新部門
      tags:
      - 部門
  /api/v1/dict-data/option-select:
    get:
      description: 資料字典根據key取得
      parameters:
      - description: dictType
        in: query
        name: dictType
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.SysDictDataGetAllResp'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 資料字典根據key取得
      tags:
      - 字典資料
  /api/v1/dict/data:
    delete:
      description: 刪除資料
      parameters:
      - description: body
        in: body
        name: dictCode
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictDataDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "刪除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 刪除字典資料
      tags:
      - 字典資料
    get:
      description: 取得JSON
      parameters:
      - description: status
        in: query
        name: status
        type: string
      - description: dictCode
        in: query
        name: dictCode
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页碼
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 字典資料列表
      tags:
      - 字典資料
    post:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictDataInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "新增成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 新增字典資料
      tags:
      - 字典資料
  /api/v1/dict/data/{dictCode}:
    get:
      description: 取得JSON
      parameters:
      - description: 字典流水號
        in: path
        name: dictCode
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 透過流水號取得字典資料
      tags:
      - 字典資料
    put:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictDataUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "更新成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新字典資料
      tags:
      - 字典資料
  /api/v1/dict/type:
    delete:
      description: 刪除資料
      parameters:
      - description: body
        in: body
        name: dictCode
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictTypeDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 刪除字典類型
      tags:
      - 字典類型
    get:
      description: 取得JSON
      parameters:
      - description: dictName
        in: query
        name: dictName
        type: string
      - description: dictId
        in: query
        name: dictId
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页碼
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 字典類型列表資料
      tags:
      - 字典類型
    post:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictTypeInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 新增字典類型
      tags:
      - 字典類型
  /api/v1/dict/type-option-select:
    get:
      description: 取得JSON
      parameters:
      - description: dictName
        in: query
        name: dictName
        type: string
      - description: dictId
        in: query
        name: dictId
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 字典類型全部資料 代碼生成使用API
      tags:
      - 字典類型
  /api/v1/dict/type/{dictId}:
    get:
      description: 取得JSON
      parameters:
      - description: 字典類型流水號
        in: path
        name: dictId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 字典類型透過字典id取得
      tags:
      - 字典類型
    put:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictTypeUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新字典類型
      tags:
      - 字典類型
  /api/v1/getinfo:
    get:
      description: 取得JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 取得个人訊息
      tags:
      - user資料
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: |-
        取得token
        LoginHandler can be used by clients to get a jwt token.
        Payload needs to be json in the form of {"username": "USERNAME", "password": "PASSWORD"}.
        Reply will be of the form {"token": "TOKEN"}.
        dev mode：It should be noted that all fields cannot be empty, and a value of 0 can be passed in addition to the account password
        注意：开发模式：需要注意全部字段不能為空，帳號密碼外可以傳入0值
      parameters:
      - description: account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/handler.Login'
      responses:
        "200":
          description: '{"code": 200, "expire": "2019-08-07T12:45:48+08:00", "token":
            ".eyJleHAiOjE1NjUxNTMxNDgsImlkIjoiYWRtaW4iLCJvcmlnX2lhdCI6MTU2NTE0OTU0OH0.-zvzHvbg0A"
            }'
          schema:
            type: string
      summary: 登入
      tags:
      - 登入
  /api/v1/menu:
    delete:
      description: 刪除資料
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysMenuDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 刪除選單
      tags:
      - 選單
    get:
      description: 取得JSON
      parameters:
      - description: menuName
        in: query
        name: menuName
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Menu列表資料
      tags:
      - 選單
    post:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysMenuInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 建立選單
      tags:
      - 選單
  /api/v1/menu/{id}:
    get:
      description: 取得JSON
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Menu詳情資料
      tags:
      - 選單
    put:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysMenuUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新選單
      tags:
      - 選單
  /api/v1/menuTreeselect/{roleId}:
    get:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: roleId
        in: path
        name: roleId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 角色更新使用的選單列表
      tags:
      - 選單
  /api/v1/menurole:
    get:
      description: 取得JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 根據登入角色名稱取得選單列表資料（左選單使用）
      tags:
      - 選單
  /api/v1/post:
    delete:
      description: 刪除資料
      parameters:
      - description: 請求參數
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/dto.SysPostDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 刪除職稱
      tags:
      - 職稱
    get:
      description: 取得JSON
      parameters:
      - description: postName
        in: query
        name: postName
        type: string
      - description: postCode
        in: query
        name: postCode
        type: string
      - description: postId
        in: query
        name: postId
        type: string
      - description: status
        in: query
        name: status
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 職稱列表資料
      tags:
      - 職稱
    post:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysPostInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 新增職稱
      tags:
      - 職稱
  /api/v1/post/{id}:
    put:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysPostUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新職稱
      tags:
      - 職稱
  /api/v1/post/{postId}:
    get:
      description: 取得JSON
      parameters:
      - description: 流水號
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 取得職稱訊息
      tags:
      - 職稱
  /api/v1/public/uploadFile:
    post:
      consumes:
      - multipart/form-data
      description: 取得JSON
      parameters:
      - description: type
        in: query
        name: type
        required: true
        type: string
      - description: file
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: '{"code": -1, "message": "新增失敗"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 上傳圖片
      tags:
      - 公共API
  /api/v1/quote:
    delete:
      description: 刪除報價單管理
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.QuoteDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "刪除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 刪除報價單管理
      tags:
      - 報價單管理
    get:
      description: 查詢報價單管理列表
      parameters:
      - description: 報價單號
        in: query
        name: quoteNumber
        type: string
      - description: 公司流水號
        in: query
        name: companyTypeId
        type: string
      - description: 客戶
        in: query
        name: accountId
        type: string
      - description: 每頁幾筆
        in: query
        name: pageSize
        type: integer
      - description: 頁數
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Quote'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 查詢報價單管理列表
      tags:
      - 報價單管理
    post:
      consumes:
      - application/json
      description: 建立報價單管理
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.QuoteInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "建立成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 建立報價單管理
      tags:
      - 報價單管理
  /api/v1/quote/{id}:
    get:
      description: 查詢報價單管理
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Quote'
              type: object
      security:
      - Bearer: []
      summary: 查詢報價單管理
      tags:
      - 報價單管理
    put:
      consumes:
      - application/json
      description: 更新報價單管理
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.QuoteUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "更新成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新報價單管理
      tags:
      - 報價單管理
  /api/v1/role:
    delete:
      description: 刪除資料
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysRoleDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 刪除User角色
      tags:
      - 角色/Role
    get:
      description: Get JSON
      parameters:
      - description: roleName
        in: query
        name: roleName
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: roleKey
        in: query
        name: roleKey
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页碼
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 角色列表資料
      tags:
      - 角色/Role
    post:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysRoleInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 建立角色
      tags:
      - 角色/Role
  /api/v1/role-status/{id}:
    put:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RoleDataScopeReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新角色資料權限
      tags:
      - 角色/Role
  /api/v1/role/{id}:
    get:
      description: 取得JSON
      parameters:
      - description: roleId
        in: path
        name: roleId
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 取得Role資料
      tags:
      - 角色/Role
    put:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysRoleUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新User角色
      tags:
      - 角色/Role
  /api/v1/server-monitor:
    get:
      description: 取得JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 系統訊息
      tags:
      - 系統訊息
  /api/v1/set-config:
    get:
      consumes:
      - application/json
      description: 界面操作設定配置值的取得
      responses:
        "200":
          description: '{"code": 200, "message": "更新成功"}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
      security:
      - Bearer: []
      summary: 取得配置
      tags:
      - 配置管理
    put:
      consumes:
      - application/json
      description: 界面操作設定配置值
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/dto.GetSetSysConfigReq'
          type: array
      responses:
        "200":
          description: '{"code": 200, "message": "更新成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 設定配置
      tags:
      - 配置管理
  /api/v1/sys-api:
    delete:
      description: 刪除API管理
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysApiDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "刪除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 刪除API管理
      tags:
      - API管理
    get:
      description: 取得API管理列表
      parameters:
      - description: 名稱
        in: query
        name: name
        type: string
      - description: 標题
        in: query
        name: title
        type: string
      - description: 地址
        in: query
        name: path
        type: string
      - description: 類型
        in: query
        name: action
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页碼
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 取得API管理列表
      tags:
      - API管理
  /api/v1/sys-api/{id}:
    get:
      description: 取得API管理
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/go-admin_app_admin_models.SysApi'
              type: object
      security:
      - Bearer: []
      summary: 取得API管理
      tags:
      - API管理
    put:
      consumes:
      - application/json
      description: 更新API管理
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysApiUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "更新成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新API管理
      tags:
      - API管理
  /api/v1/sys-config:
    delete:
      description: 刪除配置管理
      parameters:
      - description: ids
        in: body
        name: ids
        schema:
          items:
            type: integer
          type: array
      responses:
        "200":
          description: '{"code": 200, "message": "刪除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 刪除配置管理
      tags:
      - 配置管理
    get:
      description: 取得配置管理列表
      parameters:
      - description: 名稱
        in: query
        name: configName
        type: string
      - description: key
        in: query
        name: configKey
        type: string
      - description: 類型
        in: query
        name: configType
        type: string
      - description: 是否前端
        in: query
        name: isFrontend
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页碼
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 取得配置管理列表
      tags:
      - 配置管理
    post:
      consumes:
      - application/json
      description: 建立配置管理
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysConfigControl'
      responses:
        "200":
          description: '{"code": 200, "message": "建立成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 建立配置管理
      tags:
      - 配置管理
  /api/v1/sys-config/{id}:
    get:
      description: 根據Key取得SysConfig的Service
      parameters:
      - description: configKey
        in: path
        name: configKey
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysConfigByKeyReq'
              type: object
      security:
      - Bearer: []
      summary: 根據Key取得SysConfig的Service
      tags:
      - 配置管理
    put:
      consumes:
      - application/json
      description: 更新配置管理
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysConfigControl'
      responses:
        "200":
          description: '{"code": 200, "message": "更新成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新配置管理
      tags:
      - 配置管理
  /api/v1/sys-login-log:
    delete:
      description: 登入Log刪除
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysLoginLogDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 登入Log刪除
      tags:
      - 登入Log
    get:
      description: 取得JSON
      parameters:
      - description: 使用者
        in: query
        name: username
        type: string
      - description: ip地址
        in: query
        name: ipaddr
        type: string
      - description: 歸屬地
        in: query
        name: loginLocation
        type: string
      - description: 狀態
        in: query
        name: status
        type: string
      - description: 开始時間
        in: query
        name: beginTime
        type: string
      - description: 结束時間
        in: query
        name: endTime
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 登入Log列表
      tags:
      - 登入Log
  /api/v1/sys-login-log/{id}:
    get:
      description: 取得JSON
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 登入Log透過id取得
      tags:
      - 登入Log
  /api/v1/sys-opera-log:
    delete:
      description: 刪除資料
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysOperaLogDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 刪除操作Log
      tags:
      - 操作Log
    get:
      description: 取得JSON
      parameters:
      - description: title
        in: query
        name: title
        type: string
      - description: method
        in: query
        name: method
        type: string
      - description: requestMethod
        in: query
        name: requestMethod
        type: string
      - description: operUrl
        in: query
        name: operUrl
        type: string
      - description: operIp
        in: query
        name: operIp
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: beginTime
        in: query
        name: beginTime
        type: string
      - description: endTime
        in: query
        name: endTime
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 操作Log列表
      tags:
      - 操作Log
  /api/v1/sys-opera-log/{id}:
    get:
      description: 取得JSON
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 操作Log透過id取得
      tags:
      - 操作Log
  /api/v1/sys-user:
    get:
      description: 取得JSON
      parameters:
      - description: username
        in: query
        name: username
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 列表User訊息資料
      tags:
      - User
    post:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: User資料
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 建立User
      tags:
      - User
  /api/v1/sys-user/{userId}:
    delete:
      description: 刪除資料
      parameters:
      - description: userId
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 刪除User資料
      tags:
      - User
    get:
      description: 取得JSON
      parameters:
      - description: User流水號
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 取得User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新User資料
      tags:
      - User
  /api/v1/sys/tables/info:
    post:
      consumes:
      - application/json
      description: 新增表結構
      parameters:
      - description: tableName / 資料表名稱
        in: query
        name: tables
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "新增失敗"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 新增表結構
      tags:
      - 工具 / 生成工具
    put:
      consumes:
      - application/json
      description: 更新表結構
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tools.SysTables'
      responses:
        "200":
          description: '{"code": -1, "message": "新增失敗"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 更新表結構
      tags:
      - 工具 / 生成工具
  /api/v1/sys/tables/info/{tableId}:
    delete:
      description: 刪除表結構
      parameters:
      - description: tableId
        in: path
        name: tableId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "刪除失敗"}'
          schema:
            type: string
      summary: 刪除表結構
      tags:
      - 工具 / 生成工具
    get:
      description: 取得JSON
      parameters:
      - description: configKey
        in: path
        name: configKey
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 取得配置
      tags:
      - 工具 / 生成工具
  /api/v1/sys/tables/page:
    get:
      description: 生成表分頁列表
      parameters:
      - description: tableName / 資料表名稱
        in: query
        name: tableName
        type: string
      - description: pageSize / 页条数
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / 页碼
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      summary: 分頁列表資料
      tags:
      - 工具 / 生成工具
  /api/v1/user/avatar:
    post:
      consumes:
      - multipart/form-data
      description: 取得JSON
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新頭貼
      tags:
      - user資料
  /api/v1/user/profile:
    get:
      description: 取得JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 取得user資料User
      tags:
      - user資料
  /api/v1/user/pwd/reset:
    put:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ResetSysUserPwdReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 重置User密碼
      tags:
      - User
  /api/v1/user/pwd/set:
    put:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.PassWord'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新密碼
      tags:
      - User
  /api/v1/user/status:
    put:
      consumes:
      - application/json
      description: 取得JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateSysUserStatusReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新User狀態
      tags:
      - User
  /logout:
    post:
      consumes:
      - application/json
      description: 取得token
      responses:
        "200":
          description: '{"code": 200, "msg": "成功登出系統" }'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 登出
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
